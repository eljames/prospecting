<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx 
  	http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- Scan for controller classes -->
	
	<context:component-scan base-package="br.prospecting.controller" />
	
	<!-- Allow mvc annotation driven -->
	
	<mvc:annotation-driven>
		
		<!-- Gson Message Converter Configuration -->
		<!-- Allow a POJO being converted to JSON automatically or vice versa -->
		
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.json.GsonHttpMessageConverter">
				<property name="gson">
					<bean class="com.google.gson.Gson" factory-bean="gsonBuilder" factory-method="create" />
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- Bean to be used on Message Converter (Gson Framework) -->
	
	<bean id="gsonBuilder" class="com.google.gson.GsonBuilder" />
	
	<!-- This set up Gson Factory to register customized configurations (In this case, date time customization) -->
	
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="gsonBuilder" />
		<property name="targetMethod" value="registerTypeHierarchyAdapter" />
		<property name="arguments">
			<list>
				<value type="java.lang.Class">java.time.LocalDateTime</value>
				<ref bean="dateTimeGsonAdapter"/>
			</list>
		</property>
	</bean>
	<bean id="dateTimeGsonAdapter" class="br.tools.DateTimeGsonAdapter" />
	
	<!-- Resources path configuration (images, css, js) -->
	
	<mvc:resources mapping="/src/**" location="/src/" />
	
	<!-- Path view configuration (the jsp must be inside /WEB-INF/views) -->
	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- Scan these packages to work @Autowired annotation. There are repositories and services implementation  -->
	
	<context:component-scan base-package="br.prospecting.dal" />
	<context:component-scan base-package="br.prospecting.service" />

	<!-- Get database properties from database.properties file -->
	
	<bean id="databasePropertyConfigurer" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="location">
			<value>classpath:../database.properties</value>
		</property>
	</bean>
	
	<!-- Data source configuration with Tomcat JDBC Connection Pool -->
	
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="driverClassName" value="${pg.driver}" />
		<property name="url" value="${pg.url}" />
		<property name="username" value="${pg.username}" />
		<property name="password" value="${pg.password}" />
	</bean>

	<!-- Creates a transaction manager bean  -->
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Transaction manager annotation driven with transactionManager bean  -->
	
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>